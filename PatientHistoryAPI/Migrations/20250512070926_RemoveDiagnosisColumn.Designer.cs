// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientHistoryAPI.Models;

#nullable disable

namespace PatientHistoryAPI.Migrations
{
    [DbContext(typeof(PatientHistoryDbContext))]
    [Migration("20250512070926_RemoveDiagnosisColumn")]
    partial class RemoveDiagnosisColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientHistoryAPI.Models.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagnosisId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Diagnosis1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Diagnosis");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("DiagnosisId")
                        .HasName("PK__Diagnose__0C54CC7320454587");

                    b.HasIndex("VisitId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorId")
                        .HasName("PK__Doctors__2DC00EBF9BBFA8CF");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PatientId")
                        .HasName("PK__Patients__970EC366D3CD56FE");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"));

                    b.Property<string>("Dosage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Duration")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Medication")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("PrescriptionId")
                        .HasName("PK__Prescrip__4013083215B201B8");

                    b.HasIndex("VisitId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime");

                    b.HasKey("VisitId")
                        .HasName("PK__Visits__4D3AA1DE480A0DE9");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Diagnosis", b =>
                {
                    b.HasOne("PatientHistoryAPI.Models.Visit", "Visit")
                        .WithMany("Diagnoses")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK__Diagnoses__Visit__2B3F6F97");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Prescription", b =>
                {
                    b.HasOne("PatientHistoryAPI.Models.Visit", "Visit")
                        .WithMany("Prescriptions")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK__Prescript__Visit__2E1BDC42");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Visit", b =>
                {
                    b.HasOne("PatientHistoryAPI.Models.Doctor", "Doctor")
                        .WithMany("Visits")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK__Visits__DoctorId__286302EC");

                    b.HasOne("PatientHistoryAPI.Models.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK__Visits__PatientI__276EDEB3");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Doctor", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("PatientHistoryAPI.Models.Visit", b =>
                {
                    b.Navigation("Diagnoses");

                    b.Navigation("Prescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
